buildscript {
    ext {
        springBootVersion = "1.4.2.RELEASE"
        springVersion = "4.3.4.RELEASE"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath 'com.netflix.nebula:gradle-lint-plugin:latest.release'
    }
}

apply plugin: "war"
apply plugin: 'nebula.lint'
apply from: "./java.gradle"

group = "org.superbiz"
version = "1.1.0-SNAPSHOT"

description = "OpenEJB :: Web Examples :: Moviefun"

gradleLint.rules = ['all-dependency']
gradleLint.rules += 'unused-dependency'


dependencies {
    compile "taglibs:standard:1.1.2"
    //compile "org.springframework.boot:spring-boot-starter-web"
    //compile "org.springframework.boot:spring-boot-starter-tomcat"
    //compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "mysql:mysql-connector-java:5.1.40"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.7.0"
    compile "com.amazonaws:aws-java-sdk:1.11.74"

    compile "javax.servlet:jstl:1.2"
    compile "org.apache.tomee:javaee-api:7.0"
    compile "org.apache.tomcat.embed:tomcat-embed-jasper:8.5.6"
    compile "org.apache.geronimo.specs:geronimo-osgi-locator:1.1"
    compile "org.apache.geronimo.components:geronimo-jaspi:2.0.0"

    testCompile "junit:junit:4.12"
}

task dependenciesGraphDot {

    mustRunAfter "customClean"

    def graphBuildDir = "build/dependenciesGraph"
    def dotFile = file "$graphBuildDir/graph.dot"

    doLast {
        delete graphBuildDir
        mkdir graphBuildDir

        dotFile << "digraph dependencies {\n"

        project.subprojects.forEach { Project subProject ->
            try {

                Configuration compileConfig = subProject.configurations["compile"]

                compileConfig
                        .dependencies
                        .grep { it.respondsTo("getDependencyProject") }
                        .forEach { dotFile << """  "$subProject.name" -> "$it.dependencyProject.name"\n""" }
            } catch (UnknownConfigurationException ignored) {
            }
        }
        dotFile << "}\n"
    }
}

task dependenciesGraph(dependsOn: "dependenciesGraphDot", type: Exec) {
    workingDir "$project.buildDir/dependenciesGraph"
    commandLine "dot", "-O", "-Tpng", "graph.dot"
}

task customClean(type: Delete) {
    delete "build"
}
